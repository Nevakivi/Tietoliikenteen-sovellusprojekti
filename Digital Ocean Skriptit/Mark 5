#!/usr/bin/python3

from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler
import pymysql
import os
import sys
import time

start_path = '/var/www/html/images'

db = pymysql.connect("localhost","ledipoika","ledipojat","Projekti")

cursor = db.cursor()



for path,dirs,files in os.walk(start_path):
    for filename in files:
        filename = os.path.join(path,filename)
        finame = (filename.split("html",1)[1])
        sql = "INSERT IGNORE INTO images(id,pvm,Polku) VALUES(NULL,NOW(),'%s')" %finame
        cursor.execute(sql)

db.commit()

db.close()

def query(fname):
# Open database connection
  db = pymysql.connect("localhost","ledipoika","ledipojat","Projekti" )

# prepare a cursor object using cursor() method
  cursor = db.cursor()

  sql = "INSERT IGNORE INTO images(id,pvm,Polku) VALUES(NULL,NOW(),'%s')" %fname
  cursor.execute(sql)

  db.commit()
# disconnect from server
  db.close()

class ExampleHandler(FileSystemEventHandler):
    def on_created(self, event): # when file is created
        print("Got event for file:%s" %event.src_path)
        name=(event.src_path.split("html",1)[1])
        query(name)

observer = Observer()
event_handler = ExampleHandler() # create event handler
# set observer to use created handler in directory
observer.schedule(event_handler, path='/var/www/html/images')
observer.start()

# sleep until keyboard interrupt, then stop + rejoin the observer
try:
    while True:
        time.sleep(1)
except KeyboardInterrupt:
    observer.stop()

observer.join()
